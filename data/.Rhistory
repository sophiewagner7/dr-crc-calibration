# Author: Sophie Wagner
# Contact: sw3767@cumc.columbia.edu
rm(list = ls()) # Clearing Environment and Plots
# dev.off() # Throws non-critical error if no plots exist
#Importing Packages
library(ggplot2) # For efficient plotting
library(dplyr)  # For dataframe manipulation
library(rstpm2) # For hazard modelling
library(survival)
library(forcats)
library(tidyr)
gc()
cat("\014") # Clearing Console
# Using Case Listing Data
df <- read.csv("C:\\repos\\pdac-calibration\\data\\s17_case_listings.csv")
df <- df |>
filter(Survival.months != "Unknown") |>
mutate(
SEER.cause.specific.death.classification = factor(
SEER.cause.specific.death.classification,
levels = c("Alive or dead of other cause", "Dead (attributable to this cancer dx)")
),
SEER.other.cause.of.death.classification = factor(
SEER.other.cause.of.death.classification,
levels = c("Alive or dead due to cancer", "Dead (attributable to causes other than this cancer dx)")
),
Vital.status.recode..study.cutoff.used. = factor(
Vital.status.recode..study.cutoff.used.,
levels = c("Alive", "Dead")
),
SEER.historic.stage.A..1973.2015. = factor(
SEER.historic.stage.A..1973.2015.,
levels = c("Localized", "Regional", "Distant")
),
Survival.months = as.numeric(Survival.months),
Event = case_when(
Vital.status.recode..study.cutoff.used. == "Alive" ~ 0,
SEER.cause.specific.death.classification == "Dead (attributable to this cancer dx)" ~ 1,
SEER.other.cause.of.death.classification == "Dead (attributable to causes other than this cancer dx)" ~ 2,
TRUE ~ NA_real_
),
Cancer_death = ifelse(SEER.cause.specific.death.classification=="Alive or dead of other cause", 0, 1),
Other_death = ifelse(SEER.other.cause.of.death.classification=="Alive or dead due to cancer", 0, 1),
All_death = ifelse(Vital.status.recode..study.cutoff.used.=="Alive", 0, 1),
Age = as.numeric(substr(Age.recode.with.single.ages.and.85.,1,2))
)
df2 <- df |>
arrange(Age) |>
mutate(
AGE = factor(cut(Age, c(0, 29, 39, 44, 49, 54, 59, 64, 69, 74, 79, 84)),
levels = c("(0,29]", "(29,39]", "(39,44]", "(44,49]",
"(49,54]", "(54,59]", "(59,64]", "(64,69]",
"(69,74]", "(74,79]", "(79,84]"), ordered = T),
EVENT = ifelse(Survival.months > 120, 0, Event),
MONTHS = ifelse(Survival.months > 120, 120, Survival.months),
YEARS = 1+MONTHS %/% 6
)
test<-df2 |> select(AGE, SEER.historic.stage.A..1973.2015., EVENT, YEARS) |>
rename(STAGE=SEER.historic.stage.A..1973.2015.) |>
drop_na()
# No data for distant age 0-29, will copy distant 29-29
duplicated_data <- test |>
filter(EVENT==2 & AGE == "(29,39]" & STAGE %in% c("Regional", "Distant")) |>
mutate(AGE = "(0,29]")
test <- test |>
bind_rows(duplicated_data)
fit_OD <- stpm2(Surv(YEARS, EVENT==2)~AGE+STAGE, data = test, df=2)  # Creating model
df2 <- df |>
arrange(Age) |>
mutate(
AGE = factor(cut(Age, c(0, 39, 49, 54, 59, 64, 69, 74, 79, 84)),
levels = c("(0,39]", "(39,49]", "(49,54]", "(54,59]", "(59,64]", "(64,69]",
"(69,74]", "(74,79]", "(79,84]"), ordered = T),
EVENT = ifelse(Survival.months > 120, 0, Event),
MONTHS = ifelse(Survival.months > 120, 120, Survival.months),
YEARS = 1+MONTHS %/% 6
)
test<-df2 |> select(AGE, SEER.historic.stage.A..1973.2015., EVENT, YEARS) |>
rename(STAGE=SEER.historic.stage.A..1973.2015.) |>
drop_na()
fit_OD <- stpm2(Surv(YEARS, EVENT==2)~AGE+STAGE, data = test, df=2)  # Creating model
test
summary(test)
table(test$AGE)
table(test$STAGE)
table(test$AGE, test$STAGE)
str(test)
df <- df |>
filter(Survival.months != "Unknown") |>
mutate(
SEER.cause.specific.death.classification = factor(
SEER.cause.specific.death.classification,
levels = c("Alive or dead of other cause", "Dead (attributable to this cancer dx)")
),
SEER.other.cause.of.death.classification = factor(
SEER.other.cause.of.death.classification,
levels = c("Alive or dead due to cancer", "Dead (attributable to causes other than this cancer dx)")
),
Vital.status.recode..study.cutoff.used. = factor(
Vital.status.recode..study.cutoff.used.,
levels = c("Alive", "Dead")
),
SEER.historic.stage.A..1973.2015. = factor(
SEER.historic.stage.A..1973.2015.,
levels = c("Localized", "Regional", "Distant")
),
Survival.months = as.numeric(Survival.months),
Event = case_when(
Vital.status.recode..study.cutoff.used. == "Alive" ~ 0,
SEER.cause.specific.death.classification == "Dead (attributable to this cancer dx)" ~ 1,
SEER.other.cause.of.death.classification == "Dead (attributable to causes other than this cancer dx)" ~ 2,
TRUE ~ NA_real_
),
Cancer_death = ifelse(SEER.cause.specific.death.classification=="Alive or dead of other cause", 0, 1),
Other_death = ifelse(SEER.other.cause.of.death.classification=="Alive or dead due to cancer", 0, 1),
All_death = ifelse(Vital.status.recode..study.cutoff.used.=="Alive", 0, 1),
Age = as.numeric(substr(Age.recode.with.single.ages.and.85.,1,2))
)
df2 <- df |>
arrange(Age) |>
mutate(
AGE = factor(cut(Age, c(0, 39, 49, 54, 59, 64, 69, 74, 79, 84)),
levels = c("(0,39]", "(39,49]", "(49,54]", "(54,59]", "(59,64]", "(64,69]",
"(69,74]", "(74,79]", "(79,84]"), ordered = T),
EVENT = ifelse(Survival.months > 120, 0, Event),
MONTHS = ifelse(Survival.months > 120, 120, Survival.months),
YEARS = 1+MONTHS %/% 6
)
test<-df2 |> select(AGE, SEER.historic.stage.A..1973.2015., EVENT, YEARS) |>
rename(STAGE=SEER.historic.stage.A..1973.2015.) |>
drop_na()
fit_OD <- stpm2(Surv(YEARS, EVENT==2)~AGE+STAGE, data = test, df=2)  # Creating model
table(test$years)
table(test$YEARS)
test$EVENT
table(test$EVENT, test$STAGE)
table(test$EVENT, test$STAGE, test$AGE)
mm <- model.matrix(~ AGE + STAGE, data = test)
qr(mm)$rank  # Should be equal to ncol(mm), if not, there's a problem.
ncol(mm)
mm
sum(is.na(test$YEARS))
sum(is.na(test$EVENT))
sum(is.na(test$AGE))
sum(is.na(test$STAGE))
sum(is.infinite(test$YEARS))
library(caret)
install.packages("caret")
library(caret)
library(caret)
nzv <- nearZeroVar(test, saveMetrics = TRUE)
print(nzv)
head(df)
unique(df$SEER.cause.specific.death.classification)
unique(df$SEER.other.cause.of.death.classification)
unique(df$SEER.historic.stage.A..1973.2015.)
# Using Case Listing Data
df <- read.csv("C:\\repos\\pdac-calibration\\data\\s17_case_listings.csv")
df <- df |>
filter(Survival.months != "Unknown") |>
filter(SEER.historic.stage.A..1973.2015. != "<NA>") |>
mutate(
SEER.cause.specific.death.classification = factor(
SEER.cause.specific.death.classification,
levels = c("Alive or dead of other cause", "Dead (attributable to this cancer dx)")
),
SEER.other.cause.of.death.classification = factor(
SEER.other.cause.of.death.classification,
levels = c("Alive or dead due to cancer", "Dead (attributable to causes other than this cancer dx)")
),
Vital.status.recode..study.cutoff.used. = factor(
Vital.status.recode..study.cutoff.used.,
levels = c("Alive", "Dead")
),
SEER.historic.stage.A..1973.2015. = factor(
SEER.historic.stage.A..1973.2015.,
levels = c("Localized", "Regional", "Distant")
),
Survival.months = as.numeric(Survival.months),
Event = case_when(
Vital.status.recode..study.cutoff.used. == "Alive" ~ 0,
SEER.cause.specific.death.classification == "Dead (attributable to this cancer dx)" ~ 1,
SEER.other.cause.of.death.classification == "Dead (attributable to causes other than this cancer dx)" ~ 2,
TRUE ~ NA_real_
),
Cancer_death = ifelse(SEER.cause.specific.death.classification=="Alive or dead of other cause", 0, 1),
Other_death = ifelse(SEER.other.cause.of.death.classification=="Alive or dead due to cancer", 0, 1),
All_death = ifelse(Vital.status.recode..study.cutoff.used.=="Alive", 0, 1),
Age = as.numeric(substr(Age.recode.with.single.ages.and.85.,1,2))
)
df2 <- df |>
arrange(Age) |>
mutate(
AGE = factor(cut(Age, c(0, 39, 49, 54, 59, 64, 69, 74, 79, 84)),
levels = c("(0,39]", "(39,49]", "(49,54]", "(54,59]", "(59,64]", "(64,69]",
"(69,74]", "(74,79]", "(79,84]"), ordered = T),
EVENT = ifelse(Survival.months > 120, 0, Event),
MONTHS = ifelse(Survival.months > 120, 120, Survival.months),
YEARS = 1+MONTHS %/% 6
)
test<-df2 |> select(AGE, SEER.historic.stage.A..1973.2015., EVENT, YEARS) |>
rename(STAGE=SEER.historic.stage.A..1973.2015.) |>
drop_na()
# # No data for distant age 0-29, will copy distant 29-29
# duplicated_data <- test |>
#   filter(EVENT==2 & AGE == "(29,39]" & STAGE %in% c("Regional", "Distant")) |>
#   mutate(AGE = "(0,29]")
# test <- test |>
#   bind_rows(duplicated_data)
fit_OD <- stpm2(Surv(YEARS, EVENT==2)~AGE+STAGE, data = test, df=2)  # Creating model
unique(df$Event)
unique(test$EVENT)
unique(test$STAGE)
unique(test$YEARS)
unique(test$AGE)
head(test)
Surv(test$YEARS, test$EVENT==1)
survfitobj <- Surv(test$YEARS, test$EVENT)
summary(survfitobj)
unique(df$Event)
test$CSD <- ifelse(test$EVENT==2,1,0)
test$ACM <- ifelse(test$EVENT==2,1,0)
test$CSD <- ifelse(test$EVENT==1,1,0)
fit_OD <- stpm2(Surv(YEARS, ACM)~AGE+STAGE, data = test, df=2)  # Creating model
fit_OD <- stpm2(Surv(YEARS, ACM)~AGE+STAGE, data = test)  # Creating model
